{"ast":null,"code":"var _jsxFileName = \"/Users/sanjaysuman/One Tappe/OneTappeProject/frontend/src/components/SalesChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useLayoutEffect } from 'react';\n\n/**\n * SalesChart component for rendering sales data visualizations\n * This component creates a responsive chart that works across browsers\n * including Firefox which had rendering issues previously\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesChart = ({\n  data,\n  type = 'bar',\n  height = 300,\n  width = '100%'\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Function to render chart\n  const renderChart = () => {\n    var _containerRef$current;\n    if (!canvasRef.current || !data) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear previous chart\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get dimensions\n    const dpr = window.devicePixelRatio || 1;\n    const rect = canvas.getBoundingClientRect();\n\n    // Ensure we have valid dimensions\n    const chartWidth = rect.width > 0 ? rect.width : ((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.clientWidth) || 300;\n    const chartHeight = rect.height > 0 ? rect.height : height;\n\n    // Set canvas dimensions\n    canvas.width = chartWidth * dpr;\n    canvas.height = chartHeight * dpr;\n\n    // Scale context\n    ctx.scale(dpr, dpr);\n\n    // Draw chart based on type\n    if (type === 'bar') {\n      drawBarChart(ctx, data, chartWidth, chartHeight);\n    } else if (type === 'line') {\n      drawLineChart(ctx, data, chartWidth, chartHeight);\n    } else if (type === 'pie') {\n      drawPieChart(ctx, data, Math.min(chartWidth, chartHeight) / 2);\n    }\n  };\n\n  // Use useLayoutEffect for DOM measurements before browser paint\n  useLayoutEffect(() => {\n    if (!canvasRef.current || !data) return;\n    const canvas = canvasRef.current;\n\n    // Set canvas style dimensions\n    canvas.style.width = '100%';\n    canvas.style.height = `${height}px`;\n\n    // Initial render\n    renderChart();\n\n    // Setup ResizeObserver for responsive behavior\n    // This is especially important for Firefox which has issues with canvas resizing\n    const resizeObserver = new ResizeObserver(() => {\n      renderChart();\n    });\n\n    // Observe both the canvas and its container\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    // Handle window resize events\n    const handleResize = () => {\n      renderChart();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup function\n    return () => {\n      resizeObserver.disconnect();\n      window.removeEventListener('resize', handleResize);\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, [data, type, height, width]);\n\n  // Bar chart drawing function\n  const drawBarChart = (ctx, data, width, height) => {\n    const padding = 40;\n    const chartWidth = width - padding * 2;\n    const chartHeight = height - padding * 2;\n    const barWidth = chartWidth / data.labels.length;\n\n    // Find max value for scaling\n    const maxValue = Math.max(...data.datasets[0].data);\n    const scale = chartHeight / maxValue;\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.strokeStyle = '#333';\n    ctx.stroke();\n\n    // Draw bars\n    data.labels.forEach((label, index) => {\n      const value = data.datasets[0].data[index];\n      const barHeight = value * scale;\n      const x = padding + index * barWidth + barWidth * 0.1;\n      const y = height - padding - barHeight;\n\n      // Draw bar\n      ctx.fillStyle = data.datasets[0].backgroundColor[index] || '#4299e1';\n      ctx.fillRect(x, y, barWidth * 0.8, barHeight);\n\n      // Draw label\n      ctx.fillStyle = '#333';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(label, x + barWidth * 0.4, height - padding + 20);\n\n      // Draw value\n      ctx.fillText(value.toString(), x + barWidth * 0.4, y - 10);\n    });\n  };\n\n  // Line chart drawing function\n  const drawLineChart = (ctx, data, width, height) => {\n    const padding = 40;\n    const chartWidth = width - padding * 2;\n    const chartHeight = height - padding * 2;\n\n    // Find max value for scaling\n    const maxValue = Math.max(...data.datasets[0].data);\n    const scale = chartHeight / maxValue;\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.strokeStyle = '#333';\n    ctx.stroke();\n\n    // Draw line\n    ctx.beginPath();\n    const pointWidth = chartWidth / (data.labels.length - 1);\n    data.datasets[0].data.forEach((value, index) => {\n      const x = padding + index * pointWidth;\n      const y = height - padding - value * scale;\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n\n      // Draw point\n      ctx.fillStyle = '#4299e1';\n      ctx.beginPath();\n      ctx.arc(x, y, 4, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw label\n      ctx.fillStyle = '#333';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(data.labels[index], x, height - padding + 20);\n    });\n    ctx.strokeStyle = '#4299e1';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  };\n\n  // Pie chart drawing function\n  const drawPieChart = (ctx, data, radius) => {\n    const centerX = ctx.canvas.width / (2 * window.devicePixelRatio);\n    const centerY = ctx.canvas.height / (2 * window.devicePixelRatio);\n    let total = data.datasets[0].data.reduce((sum, value) => sum + value, 0);\n    let startAngle = 0;\n    data.datasets[0].data.forEach((value, index) => {\n      const sliceAngle = 2 * Math.PI * value / total;\n\n      // Draw slice\n      ctx.beginPath();\n      ctx.moveTo(centerX, centerY);\n      ctx.arc(centerX, centerY, radius, startAngle, startAngle + sliceAngle);\n      ctx.closePath();\n      ctx.fillStyle = data.datasets[0].backgroundColor[index] || `hsl(${index * 30}, 70%, 60%)`;\n      ctx.fill();\n\n      // Draw label\n      const labelAngle = startAngle + sliceAngle / 2;\n      const labelX = centerX + radius * 0.7 * Math.cos(labelAngle);\n      const labelY = centerY + radius * 0.7 * Math.sin(labelAngle);\n      ctx.fillStyle = '#fff';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(data.labels[index], labelX, labelY);\n      startAngle += sliceAngle;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales-chart-container\",\n    ref: containerRef,\n    style: {\n      width,\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"sales-chart\",\n      style: {\n        display: 'block',\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesChart, \"HEyDjO7eqHCXbr+g6VASPTuKjAM=\");\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["React","useEffect","useRef","useLayoutEffect","jsxDEV","_jsxDEV","SalesChart","data","type","height","width","_s","canvasRef","containerRef","renderChart","_containerRef$current","current","canvas","ctx","getContext","clearRect","dpr","window","devicePixelRatio","rect","getBoundingClientRect","chartWidth","clientWidth","chartHeight","scale","drawBarChart","drawLineChart","drawPieChart","Math","min","style","resizeObserver","ResizeObserver","observe","handleResize","addEventListener","disconnect","removeEventListener","padding","barWidth","labels","length","maxValue","max","datasets","beginPath","moveTo","lineTo","strokeStyle","stroke","forEach","label","index","value","barHeight","x","y","fillStyle","backgroundColor","fillRect","font","textAlign","fillText","toString","pointWidth","arc","PI","fill","lineWidth","radius","centerX","centerY","total","reduce","sum","startAngle","sliceAngle","closePath","labelAngle","labelX","cos","labelY","sin","textBaseline","className","ref","children","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sanjaysuman/One Tappe/OneTappeProject/frontend/src/components/SalesChart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useLayoutEffect } from 'react';\n\n/**\n * SalesChart component for rendering sales data visualizations\n * This component creates a responsive chart that works across browsers\n * including Firefox which had rendering issues previously\n */\nconst SalesChart = ({ data, type = 'bar', height = 300, width = '100%' }) => {\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  \n  // Function to render chart\n  const renderChart = () => {\n    if (!canvasRef.current || !data) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Clear previous chart\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Get dimensions\n    const dpr = window.devicePixelRatio || 1;\n    const rect = canvas.getBoundingClientRect();\n    \n    // Ensure we have valid dimensions\n    const chartWidth = rect.width > 0 ? rect.width : containerRef.current?.clientWidth || 300;\n    const chartHeight = rect.height > 0 ? rect.height : height;\n    \n    // Set canvas dimensions\n    canvas.width = chartWidth * dpr;\n    canvas.height = chartHeight * dpr;\n    \n    // Scale context\n    ctx.scale(dpr, dpr);\n    \n    // Draw chart based on type\n    if (type === 'bar') {\n      drawBarChart(ctx, data, chartWidth, chartHeight);\n    } else if (type === 'line') {\n      drawLineChart(ctx, data, chartWidth, chartHeight);\n    } else if (type === 'pie') {\n      drawPieChart(ctx, data, Math.min(chartWidth, chartHeight) / 2);\n    }\n  };\n  \n  // Use useLayoutEffect for DOM measurements before browser paint\n  useLayoutEffect(() => {\n    if (!canvasRef.current || !data) return;\n    \n    const canvas = canvasRef.current;\n    \n    // Set canvas style dimensions\n    canvas.style.width = '100%';\n    canvas.style.height = `${height}px`;\n    \n    // Initial render\n    renderChart();\n    \n    // Setup ResizeObserver for responsive behavior\n    // This is especially important for Firefox which has issues with canvas resizing\n    const resizeObserver = new ResizeObserver(() => {\n      renderChart();\n    });\n    \n    // Observe both the canvas and its container\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n    \n    // Handle window resize events\n    const handleResize = () => {\n      renderChart();\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup function\n    return () => {\n      resizeObserver.disconnect();\n      window.removeEventListener('resize', handleResize);\n      \n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, [data, type, height, width]);\n  \n  // Bar chart drawing function\n  const drawBarChart = (ctx, data, width, height) => {\n    const padding = 40;\n    const chartWidth = width - (padding * 2);\n    const chartHeight = height - (padding * 2);\n    const barWidth = chartWidth / data.labels.length;\n    \n    // Find max value for scaling\n    const maxValue = Math.max(...data.datasets[0].data);\n    const scale = chartHeight / maxValue;\n    \n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.strokeStyle = '#333';\n    ctx.stroke();\n    \n    // Draw bars\n    data.labels.forEach((label, index) => {\n      const value = data.datasets[0].data[index];\n      const barHeight = value * scale;\n      const x = padding + (index * barWidth) + (barWidth * 0.1);\n      const y = height - padding - barHeight;\n      \n      // Draw bar\n      ctx.fillStyle = data.datasets[0].backgroundColor[index] || '#4299e1';\n      ctx.fillRect(x, y, barWidth * 0.8, barHeight);\n      \n      // Draw label\n      ctx.fillStyle = '#333';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(label, x + (barWidth * 0.4), height - padding + 20);\n      \n      // Draw value\n      ctx.fillText(value.toString(), x + (barWidth * 0.4), y - 10);\n    });\n  };\n  \n  // Line chart drawing function\n  const drawLineChart = (ctx, data, width, height) => {\n    const padding = 40;\n    const chartWidth = width - (padding * 2);\n    const chartHeight = height - (padding * 2);\n    \n    // Find max value for scaling\n    const maxValue = Math.max(...data.datasets[0].data);\n    const scale = chartHeight / maxValue;\n    \n    // Draw axes\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.strokeStyle = '#333';\n    ctx.stroke();\n    \n    // Draw line\n    ctx.beginPath();\n    const pointWidth = chartWidth / (data.labels.length - 1);\n    \n    data.datasets[0].data.forEach((value, index) => {\n      const x = padding + (index * pointWidth);\n      const y = height - padding - (value * scale);\n      \n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      \n      // Draw point\n      ctx.fillStyle = '#4299e1';\n      ctx.beginPath();\n      ctx.arc(x, y, 4, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Draw label\n      ctx.fillStyle = '#333';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(data.labels[index], x, height - padding + 20);\n    });\n    \n    ctx.strokeStyle = '#4299e1';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  };\n  \n  // Pie chart drawing function\n  const drawPieChart = (ctx, data, radius) => {\n    const centerX = ctx.canvas.width / (2 * window.devicePixelRatio);\n    const centerY = ctx.canvas.height / (2 * window.devicePixelRatio);\n    \n    let total = data.datasets[0].data.reduce((sum, value) => sum + value, 0);\n    let startAngle = 0;\n    \n    data.datasets[0].data.forEach((value, index) => {\n      const sliceAngle = (2 * Math.PI * value) / total;\n      \n      // Draw slice\n      ctx.beginPath();\n      ctx.moveTo(centerX, centerY);\n      ctx.arc(centerX, centerY, radius, startAngle, startAngle + sliceAngle);\n      ctx.closePath();\n      ctx.fillStyle = data.datasets[0].backgroundColor[index] || `hsl(${index * 30}, 70%, 60%)`;\n      ctx.fill();\n      \n      // Draw label\n      const labelAngle = startAngle + (sliceAngle / 2);\n      const labelX = centerX + (radius * 0.7 * Math.cos(labelAngle));\n      const labelY = centerY + (radius * 0.7 * Math.sin(labelAngle));\n      \n      ctx.fillStyle = '#fff';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(data.labels[index], labelX, labelY);\n      \n      startAngle += sliceAngle;\n    });\n  };\n  \n  return (\n    <div className=\"sales-chart-container\" ref={containerRef} style={{ width, height }}>\n      <canvas \n        ref={canvasRef} \n        className=\"sales-chart\"\n        style={{ display: 'block', width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default SalesChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}